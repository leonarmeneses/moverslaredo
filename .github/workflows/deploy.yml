name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, zip

    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Create deployment artifacts
      run: |
        mkdir deployment
        cp -r app bootstrap config database public resources routes storage vendor artisan composer.json composer.lock .env.example deployment/

    - name: Deploy to Hostinger via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOSTINGER_SSH_HOST }}
        port: ${{ secrets.HOSTINGER_SSH_PORT }}
        username: ${{ secrets.HOSTINGER_SSH_USER }}
        password: ${{ secrets.HOSTINGER_SSH_PASSWORD }}
        script: |
          cd /home/${{ secrets.HOSTINGER_SSH_USER }}/domains/moverslaredo.com/public_html

          # Si es la primera vez, clonar el repositorio
          if [ ! -d ".git" ]; then
            git clone https://github.com/leonarmeneses/moverslaredo.git .
          else
            # Actualizar desde GitHub
            git pull origin main
          fi

          # Instalar dependencias de producción
          composer2 install --no-dev --optimize-autoloader

          # Optimizar Laravel para producción
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # Crear enlace de storage si no existe
          php artisan storage:link

          # Limpiar cache anterior
          php artisan cache:clear

          echo "✅ Despliegue completado exitosamente"
